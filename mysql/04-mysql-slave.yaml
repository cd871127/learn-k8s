apiVersion: v1
kind: Service
metadata:
  name: mysql-slave
  namespace: default
  labels:
    app: mysql-slave
spec:
  ports:
  - port: 3306
    name: mysql-slave
  clusterIP: None
  selector:
    app: mysql-slave
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  namespace: default
  labels:
    app: mysql-slave
spec:
  serviceName: "mysql-slave"
  replicas: 1
  selector:
    matchLabels:
      app: mysql-slave
  template:
    metadata:
      labels: 
        app: mysql-slave
    spec:
      initContainers:
      - name: init-mysql-slave
        image: mysql:8.0.29
        command:
          - bash
          - "-c"
          - |
            set -ex
            cp /mnt/config-map/slave.cnf /mnt/conf.d/
            cp /mnt/config-map/mysql.cnf /mnt/conf.d/
        volumeMounts:
          - name: conf
            mountPath: /mnt/conf.d
          - name: config-map
            mountPath: /mnt/config-map
      containers:
      - name: mysql
        image: mysql:8.0.29
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-nfs-slave
          mountPath: /var/lib/mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "mysql"
      volumes:
        - name: config-map
          configMap:
            name: mysql-configmap
        - name: mysql-nfs-slave
          persistentVolumeClaim:
            claimName: mysql-slave-pvc
        - name: conf
          emptyDir: {}
      livenessProbe:
        exec:
          command: [ "mysqladmin", "ping" ]
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
      readinessProbe:
        exec:
          # Check we can execute queries over TCP (skip-networking is off).
          command: [ "mysql", "-h", "127.0.0.1", "-e", "SELECT 1" ]
        initialDelaySeconds: 5
        periodSeconds: 2
        timeoutSeconds: 1